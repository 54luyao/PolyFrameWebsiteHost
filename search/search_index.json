{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"PolyFrame 2: Polyhedral Graphic Statics for Structural Form-Finding <p>PolyFrame 2 is a geometry-based, structural form-finding plugin for Rhinoceros3d and Grasshopper implementing polyhedron-based 3D graphic statics. Upgraded from PolyFrame for Rhino, this new version incorporates a Grasshopper plug-in that not only makes all previous functions available to Grasshopper, but also introduces a variety of new features including tension-compression-combined form-finding, algebraic 3D graphic statics, matrix static and kinematic analysis, scripting interface, built-in examples, and a lot more.</p> <p>Get Started Download PolyFrame 2</p> <p> </p> Key features  Embedded examples  Non-parallel slicing  Continuous printing  Agile visualization  Buildability analysis  Buildability optimization  Surface quality optimization  Surface-toolpath twins  Gradient multi-material printing <p> </p>"},{"location":"index.html#selected-projects-powered-by-ovenbird","title":"Selected projects powered by Ovenbird","text":"European cultural centre exhibition  3D-printed, post-tensioned concrete canopy   3D-printed Erwin Hauer   Gradient multi-material printing   Integrated and tailored thermal insulation   Multi-filament tension-compression structures"},{"location":"index.html#team","title":"Team","text":"Yao Lu  Masoud Akbarzadeh"},{"location":"index.html#a-product-of","title":"A product of","text":""},{"location":"index.html#supported-by","title":"Supported by","text":""},{"location":"index%20-%20Copy.html","title":"index   Copy","text":"Ovenbird: Concrete and Multi-Material 3D Printing <p>Ovenbird is a free Grasshopper plug-in that generates, analyzes, and optimizes 3D printing toolpaths for concrete and other large-format materials with the extended functionality of gradient multi-material printing.</p> <p></p> <p>Get Started Download Ovenbird</p>"},{"location":"index%20-%20Copy.html#key-features","title":"Key features","text":"<p> Embedded examples</p> <p> Non parallel slicing</p> <p> Continuous printing</p> <p> Agile visualization</p> <p> Buildability analysis</p> <p> Buildability optimization</p> <p> Surface quality optimization</p> <p> Surface-toolpath twins</p> <p> Gradient multi-material printing</p>"},{"location":"index%20-%20Copy.html#projects-powered-by-ovenbird","title":"Projects powered by Ovenbird","text":"<p> European cultural centre exhibition</p> <p> 3D-printed, post-tensioned concrete canopy</p> <p> 3D-printed Erwin Hauer</p> <p> Gradient multi-material printing</p> <p> Integrated and tailored thermal insulation</p> <p> Multi-filament tension-compression structures</p>"},{"location":"about/about-ovenbird/about-ovenbird.html","title":"About Ovenbird","text":"<p>\ud83d\udce2 The first ever Ovenbird workshop will be held on Nov 16-17 2025 in Boston as part of the Advances in Architectural Geometry conference!</p> <p> </p>"},{"location":"about/about-ovenbird/about-ovenbird.html#about-ovenbird","title":"About Ovenbird","text":"<p>Ovenbird is the product of the 3D concrete printing research and the gradient multi-material extrusion research at the Polyhedral Structures Laboratory (PSL), which is part of the Weitzman School of Design at the University of Pennsylvania.</p> <p>The plug-in is named after the red ovenbird (Furnarius rufus, also known as the rufous hornero), a South American bird that builds its shell nests by gradually depositing mud, a process similar to 3D concrete printing. We share the ovenbird's vision of printing our own houses. </p>"},{"location":"about/about-ovenbird/about-ovenbird.html#team","title":"Team","text":"Yefan Zhi Developer   Hua Chai  Tester   Teng Teng  Developer of multi-material hardware and firmware  Tester   Masoud Akbarzadeh  Principal Investigator"},{"location":"about/about-ovenbird/about-ovenbird.html#publications","title":"Publications","text":"<p>You can cite articles based on the Ovenbird functions used.</p> <ul> <li> <p>Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025. (1) (Framework of Ovenbird, slicing, buildability analysis, continuous printing, visualization) </p> <ol> <li> <pre><code>@article{Zhi-2025-Continuous-Path,\n    title = {Automated toolpath design of 3D concrete printing structural components},\n    journal = {Additive Manufacturing},\n    pages = {104662},\n    year = {2025},\n    issn = {2214-8604},\n    doi = {https://doi.org/10.1016/j.addma.2025.104662},\n    url = {https://www.sciencedirect.com/science/article/pii/S2214860425000260},\n    author = {Yefan Zhi and Hua Chai and Teng Teng and Masoud Akbarzadeh},\n    keywords = {3D concrete printing, Design automation, Porous structure, Buildability, Path planning, Continuous toolpath, Surface reconstruction}\n}\n</code></pre> </li> </ol> </li> <li> <p>Y. Zhi and M. Akbarzadeh, \u201cSurface-Toolpath Twins of Shell Components in 3D Concrete Printing for Optimized Buildability and Surface Quality,\u201d in Proceedings of IASS 2025 symposium: The living past as a source of innovation, Mexico City, Mexico, Oct. 2025. (1) (Surface-toolpath twins, buildability optimization, layer-level optimizations) </p> <ol> <li> <pre><code>@article{Zhi-2025-Continuous-Path,\n    title = {Automated toolpath design of 3D concrete printing structural components},\n    journal = {Additive Manufacturing},\n    pages = {104662},\n    year = {2025},\n    issn = {2214-8604},\n    doi = {https://doi.org/10.1016/j.addma.2025.104662},\n    url = {https://www.sciencedirect.com/science/article/pii/S2214860425000260},\n    author = {Yefan Zhi and Hua Chai and Teng Teng and Masoud Akbarzadeh},\n    keywords = {3D concrete printing, Design automation, Porous structure, Buildability, Path planning, Continuous toolpath, Surface reconstruction}\n}\n</code></pre> </li> </ol> </li> <li> <p>Y. Zhi, T. Teng, and M. Akbarzadeh, \u201cDesigning 3D-printed concrete structures with scaled fabrication models,\u201d Architectural Intelligence, vol. 3, no. 1, 2024. (1) (Scaled fabrication models)</p> <ol> <li> <pre><code>@article{Zhi2024,\n    title = {Designing 3D-printed concrete structures with scaled fabrication models},\n    volume = {3},\n    ISSN = {2731-6726},\n    url = {http://dx.doi.org/10.1007/s44223-024-00070-3},\n    DOI = {10.1007/s44223-024-00070-3},\n    number = {1},\n    journal = {Architectural Intelligence},\n    publisher = {Springer Science and Business Media LLC},\n    author = {Zhi, Yefan and Teng, Teng and Akbarzadeh, Masoud},\n    year = {2024},\n    month = aug\n}\n</code></pre> </li> </ol> </li> <li> <p>Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cLocal optimization of self-supporting shell structures in 3D printing: a skeleton method,\u201d in Proceedings of IASS 2023 symposium: Integration of Design and Fabrication, Melbourne, Australia, Jul. 2023. (1) (Toolpath data structures, definition of the overhang)</p> <ol> <li> <pre><code>@inproceedings{Zhi-2023-Overhang,\n    title = {Local optimization of self-supporting shell structures in 3D printing: a skeleton method},\n    booktitle = {Proceedings of IASS 2023 symposium Integration of Design and Fabrication},\n    author = {Zhi, Yefan and Chai, Hua and Teng, Teng and Akbarzadeh, Masoud},\n    year = {2023},\n    month = {July 10-14},\n    address = {Melbourne, Australia}\n}\n</code></pre> </li> </ol> </li> <li> <p>T. Teng, Y. Zhi, and M. Akbarzadeh, \u201cPrototyping high-fidelity multifunctional objects using single-nozzle multi-filament additive manufacturing system with active mixing,\u201d Materials &amp; Design, vol. 249, 2025. (1) (Multi-material printing)</p> <ol> <li> <pre><code>@article{Teng-2025-Multi-Material-3DP,\n    title = {Prototyping high-fidelity multifunctional objects using single-nozzle multi-filament additive manufacturing system with active mixing},\n    volume = {249},\n    page = {113479},\n    publisher = {Elsevier BV},\n    url = {http://dx.doi.org/10.1016/j.matdes.2024.113479},\n    doi = {10.1016/j.matdes.2024.113479},\n    journal = {Materials \\&amp; Design},\n    year = {2025},\n    month = {1},\n    author = {Teng Teng and Yefan Zhi and Masoud Akbarzadeh},\n    ENTRYTYPE = {article},\n    ID = {Teng-2025-Multi-Material-3DP}\n}\n</code></pre> </li> </ol> </li> </ul>"},{"location":"about/about-ovenbird/about-ovenbird.html#acknowledgements","title":"Acknowledgements","text":"<p>The authors gratefully acknowledge the support provided by the Advanced Research Projects Agency \u2013 Energy (ARPA-E) Grant of U.S. Department of Energy (DE-AR0001631), the National Science Foundation CAREER Award (NSF CAREER-1944691 CMMI), and the National Science Foundation Future Eco Manufacturing Research Grant (NSF FMRG-CMMI 2037097) awarded to Masoud Akbarzadeh.</p> <p>The authors also thank Yao Lu for the help in Grasshopper plug-in development.</p>"},{"location":"about/about-ovenbird/about-ovenbird.html#a-product-of","title":"A product of","text":""},{"location":"about/about-ovenbird/about-ovenbird.html#supported-by","title":"Supported by","text":""},{"location":"about/about-ovenbird/about-ovenbird.html#contact","title":"Contact","text":"<p>Contact Yefan Zhi via yefanzhi@gmail.com if you have any questions, bugs, etc. We are always willing to help.</p>"},{"location":"about/change-log/change-log.html","title":"Change Log","text":""},{"location":"about/change-log/change-log.html#ovenbird-2","title":"Ovenbird 2","text":""},{"location":"about/change-log/change-log.html#version-211-2025-09-17","title":"Version 2.1.1 - 2025-09-17","text":"<ul> <li>Collision detection in Continuous Printing.</li> <li>Documentation site.</li> <li>Bug fixes.</li> </ul>"},{"location":"about/change-log/change-log.html#version-210-2025-08-07","title":"Version 2.1.0 - 2025-08-07","text":"<ul> <li>Multi-Material Printing.</li> <li>Infill.</li> <li>More parameter options.</li> <li>Example files update.</li> </ul>"},{"location":"about/change-log/change-log.html#version-206-2025-07-21","title":"Version 2.0.6 - 2025-07-21","text":"<ul> <li>Wrap Toolpath more options.</li> <li>Nonstop Printing improved.</li> <li>Mirror more options.</li> <li>Massive toolpath union/join/intersect.</li> <li>Bug fixes.</li> </ul>"},{"location":"about/change-log/change-log.html#version-205-2025-07-17","title":"Version 2.0.5 - 2025-07-17","text":"<ul> <li>SubToolpath for animation.</li> </ul>"},{"location":"about/change-log/change-log.html#version-204-2025-07-05","title":"Version 2.0.4 - 2025-07-05","text":"<ul> <li>Nonstop Printing for common printing setups.</li> <li>Bed Adhesion.</li> <li>Split and Join Layers.</li> <li>Toolpath Boolean adds smart filter and relative or absolute.</li> <li>Smooth Toolpath and Overfill Optimization adds locker.</li> <li>Mirror Toolpath.</li> </ul>"},{"location":"about/change-log/change-log.html#version-203-2025-05-17","title":"Version 2.0.3 - 2025-05-17","text":"<ul> <li>Bake geometry with color and in current layer.</li> <li>Toolpath Mesh algorithm update.</li> <li>Polyline Toolpath supports simplification.</li> <li>Unwrap adds local orientation and height information.</li> <li>Bug fix.</li> </ul>"},{"location":"about/change-log/change-log.html#version-201-2025-05-01","title":"Version 2.0.1 - 2025-05-01","text":"<ul> <li>Ramp curve height calculation bug fix.</li> <li>Parallel visualization with non-uniform layer height bug fix.</li> <li>Unwrap adds local layer height.</li> </ul>"},{"location":"about/change-log/change-log.html#version-200-2025-04-22","title":"Version 2.0.0 - 2025-04-22","text":"<ul> <li>Initial release of Ovenbird 2 plug-in.</li> <li>Redeveloped using C#, no prerequisites needed.</li> <li>Example files embedded.</li> <li>Increased performance and stability.</li> <li>New user interface with improved usability.</li> <li>Overhang Optimization not supported on Mac.</li> <li>Multi-material Printing not implemented.</li> </ul>"},{"location":"about/change-log/change-log.html#ovenbird-1-legacy","title":"Ovenbird 1 (Legacy)","text":""},{"location":"about/change-log/change-log.html#version-108-2025-02-14","title":"Version 1.0.8 - 2025-02-14","text":"<ul> <li>Visualization updates.</li> </ul>"},{"location":"about/change-log/change-log.html#version-107-2025-02-10","title":"Version 1.0.7 - 2025-02-10","text":"<ul> <li>Visualization updates.</li> </ul>"},{"location":"about/change-log/change-log.html#version-106-2025-02-09","title":"Version 1.0.6 - 2025-02-09","text":"<ul> <li>Simplify Group update.</li> </ul>"},{"location":"about/change-log/change-log.html#version-105-2025-02-07","title":"Version 1.0.5 - 2025-02-07","text":"<ul> <li>Visualization updates.</li> </ul>"},{"location":"about/change-log/change-log.html#version-104-2025-02-03","title":"Version 1.0.4 - 2025-02-03","text":"<ul> <li>Multi-Material components update.</li> </ul>"},{"location":"about/change-log/change-log.html#version-103-2024-10-05","title":"Version 1.0.3 - 2024-10-05","text":"<ul> <li>Inspect Toolpath.</li> <li>Toolpath Check.</li> </ul>"},{"location":"about/change-log/change-log.html#version-102-2024-09-25","title":"Version 1.0.2 - 2024-09-25","text":"<ul> <li>Toolpath Mesh algorithm update.</li> </ul>"},{"location":"about/change-log/change-log.html#version-101-2024-08-21","title":"Version 1.0.1 - 2024-08-21","text":"<ul> <li>Toolpath Mesh algorithm update.</li> <li>Visualize Toolpath debug.</li> </ul>"},{"location":"about/change-log/change-log.html#version-100-2024-07-24","title":"Version 1.0.0 - 2024-07-24","text":"<ul> <li>Initial release of Ovenbird.</li> <li>Handbook.</li> </ul>"},{"location":"getting-started/first-example/first-example.html","title":"First example","text":"<p>Calling example files</p> <p>You can call  <code>Example Files</code> to find examples to base your code on. Throughout this website, we will use the following box to suggest example files to open up.</p> <p>Example File</p> <p><code>1. Introduction \u2192 (2) Minimal Working Example</code></p> <p>Often they appear as annotations. (1)</p> <ol> <li> <p>Example File</p> <code>1. Introduction \u2192 (2) Minimal Working Example</code> </li> </ol> <p>Let's open up this example! It features three core components:  <code>Slice</code>,  <code>GCode</code>, and  <code>Visualize Printing</code>.</p> <p>You can cross-reference the website columns and the example files folders using the following table.</p> Website Example Files Getting started 1. Introduction Slicing 2. Slicing Options3. Toolpath Operations4. Topology and Continuous Printing Optimizations 5. Layer-Level Optimizations6. Printability Analysis and Optimization IO 7. IO and Visualization8. From Toolpath To Surface Geometries Multi-material 9. Multi-Material Printing <p>Folder structure of the example files.</p>"},{"location":"getting-started/installation/installation.html","title":"Installation","text":""},{"location":"getting-started/installation/installation.html#installation","title":"Installation","text":"<p>Ovenbird is a plug-in for Grasshopper, the graphical algorithm editor for the 3D modeling software of Rhino. Ovenbird works on Grasshopper for Rhino \u2265 7 for both  Windows and  Mac. (1)</p> <ol> <li>Currently  <code>Overhang Optimization</code> is limited to  Windows.</li> </ol> <p>Download Ovenbird from food4Rhino. To install, unzip the package. In Grasshopper, go to <code>File \u2192 Special Folders \u2192 Components Folder</code>. Save the unzipped folder there and delete the previous one if you have it. Make sure the <code>.gha</code> file is unlocked. Restart Rhino and Grasshopper.</p>"},{"location":"getting-started/the-toolpath/the-toolpath.html","title":"The Toolpath","text":"<p>In computer-aided manufacturing, a toolpath refers to a sequence of movement instructions to an end effector. In extrusion-based 3D printing, the toolpath is the trajectory of the extruder on a robotic arm or gantry. </p>"},{"location":"getting-started/the-toolpath/the-toolpath.html#toolpath-data-structure","title":"Toolpath data structure","text":"<p>Ovenbird adopts the classic layer-based toolpath data structure where each Toolpath contains a sequence of planar layers, and each layer contains one or multiple planar curves. (1) The following table compares an Ovenbird  <code>Toolpath</code> with a toolpath from a conventional slicing software for fused desposition modelling (FDM) printers. (2)</p> <ol> <li> <p>Example File</p> <code>1. Introduction \u2192 (1) Toolpath and Continuous Toolpath</code> </li> <li>Ovenbird does not support non-planar layers, variable extrusion width, or branches with different layer counts.</li> </ol> Conventional toolpath Ovenbird Toolpath Curve sources Parallel slicing Adaptive parallel/rotary slicing,  Custom slicing,  Native curves Layer relations Parallel Parallel or non-parallel Layer thickness Pre-determined, uniform Adaptive, uniform or variable <p>Comparison between toolpath data structures</p> <p>The IO column explains in detail how curves are organized and accessed.</p>"},{"location":"getting-started/the-toolpath/the-toolpath.html#the-ovenbird-framework","title":"The Ovenbird framework","text":"<p>The Toolpath is the core of the Ovenbird framework. The following image shows how it incorporates optimization/modification methods and pipelines different data types and purposes.</p> Single- and Multi-MaterialSingle-Material Only <p></p> <p>The Ovenbird framework</p> <p></p> <p>The Ovenbird framework (single-material only)</p>"},{"location":"getting-started/tips/tips.html","title":"Tips","text":""},{"location":"getting-started/tips/tips.html#ovenbird-ui","title":"Ovenbird UI","text":"<p>The Ovenbird Grasshopper components are designed to be concise and convenient at the same time. Follow the four tips to make full use of the Ovenbird user interface.</p> <p></p> <p>Every component or parameter has a detailed description.</p> <p></p> <p>Almost all components with a message box have a right-click menu for extended options.</p> <p></p> <p>Any parameter can be customized for visualization through the right-click menu.</p> <p></p> <p>Parameters and a lot of components can be directly baked.</p>"},{"location":"getting-started/tips/tips.html#tolerance-and-resolution","title":"Tolerance and resolution","text":"<p>A lot of Ovenbird components make use of the <code>absolute tolerance</code> of your Rhino model, which is <code>0.001</code> units by default in Rhino 7. For different results and computation times, in Rhino, modify <code>File \u2192 Properties... \u2192 Units \u2192 Absolute tolerance</code>.</p> <p>In  <code>Polyline Toolpath</code>,  <code>Smooth Toolpath</code>,  <code>Overfill Optimization</code>,  <code>Toolpath Mesh</code>, and a lot of other components, there are resolution-like parameters that affect the results and compution times. Most of them come with default values, usually based on the average thickness of the  <code>Toolpath</code>. Pay attention to such input parameters although they are optional to change.</p>"},{"location":"getting-started/tips/tips.html#learn-ovenbird","title":"Learn Ovenbird","text":"<p>There is no better way to learn Ovenbird other than playing with it. This site gives an overview of the design of Ovenbird but is just a first course. It is not meant to include full details of every component. </p> <ul> <li> <p>Take your time and explore all embedded examples in  <code>Example Files</code>.</p> </li> <li> <p>Go through all components of Ovenbird. Some are not included in  <code>Example Files</code> but are self-explanatory. </p> </li> </ul>"},{"location":"getting-started/tips/tips.html#grasshopper-tips","title":"Grasshopper tips","text":"<ul> <li> <p>Do not internalize heavy data in Grasshopper as it will slow down the editing of the Grasshopper file.</p> </li> <li> <p>Lock the canvas Grasshopper when you need to make multiple changes before seeing the new result.</p> </li> <li> <p>If a component has multiple inputs, connect the main data stream (e.g.,  <code>Toolpath</code> and  <code>Continuous Toolpath</code> in Ovenbird) last to avoid unnecessary computing when the canvas is not locked.</p> </li> <li> <p>We recommend using another Grasshopper plug-in, Sunglasses, to display component names and preview DataTree structures.</p> </li> </ul>"},{"location":"io/from-to-curves/from-to-curves.html","title":"From/to curves","text":""},{"location":"io/from-to-curves/from-to-curves.html#toolpath","title":"Toolpath","text":"<p>While Ovenbird uses the custom parameter  <code>Toolpath</code> to store and pipeline the toolpath curves, it allows the mutual conversion between  <code>Toolpath</code> and Grasshopper native Curves through  <code>Wrap Toolpath</code>/ <code>Unwrap Toolpath</code> and thus combine their advantanges: </p> <ul> <li>By using  <code>Toolpath</code>, we benefit from the hierarchical data structure and integrated modification/optimization methods. We are also able to pipeline the geometry for analysis, visualization, and production purposes. You can internalize data as a  <code>Toolpath</code> parameter for saving and sharing.</li> <li>By using native Curves, we can apply native Rhino commands/Grasshopper components that we are more familiar with. We can even manually finetune them as needed.</li> </ul> Single- and Multi-MaterialSingle-Material Only <p></p> <p>The Ovenbird framework highlighting the mutual conversion</p> <p></p> <p>The Ovenbird framework highlighting the mutual conversion (single-material only)</p> <p>The output of  <code>Unwrap Toolpath</code> (curves/polyline, heights, tangents (1)) are organized following the hierarchical  <code>Toolpath</code> data structure. More options in the right-click menu.</p> <ol> <li>To get the points we can explode the polylines.</li> </ol> <pre><code>{0} Toolpath\n\u251c\u2500 {0;0} Toolpath Layer\n\u2502  \u251c\u2500 {0;0;0} Toolpath Curve\n\u2502  \u2502  \u251c\u2500 Curve/Polyline\n\u2502  \u2502  \u251c\u2500 {0;0;0}[0] Point/Height/Tangent\n\u2502  \u2502  \u251c\u2500 {0;0;0}[1] Point/Height/Tangent\n\u2502  \u2502  \u2514\u2500 ...\n\u2502  \u251c\u2500 {0;0;1} Toolpath Curve\n\u2502  \u2514\u2500 ...\n\u251c\u2500 {0;1} Toolpath Layer\n\u2514\u2500 ...\n</code></pre> <p>Curves and points on each layer share the same set of planes, which are available from   <code>Toolpath Planes</code>:</p> <pre><code>{0} Toolpath\n\u251c\u2500 Base Plane\n\u251c\u2500 {0;0} Toolpath Layer\n\u2502  \u251c\u2500 Slicing Plane\n\u2502  \u2514\u2500 Nozzle Plane\n\u251c\u2500 {0;1} Toolpath Layer\n\u2514\u2500 ...\n</code></pre> <p>While the curve output of  <code>Unwrap Toolpath</code> is a DataTree, the input of  <code>Wrap Toolpath</code> can be either a DataTree organized in layers, or simply a flatten list.  <code>Wrap Toolpath</code> is capable of sorting the curves into layers and regenerate the layer information. More options in the right-click menu.</p> <p>Example File</p> <p><code>7. IO and Visualization \u2192 (1) Unwrapping and Wrapping</code></p>"},{"location":"io/from-to-curves/from-to-curves.html#continuous-toolpath","title":"Continuous Toolpath","text":"<p> <code>Unwrap Continuous Toolpath</code> unwraps a  <code>Continuous Toolpath</code> as continuous curves, accompanied with the embedded  <code>Toolpath</code>:</p> <pre><code>{0} Continuous Toolpath\n\u251c\u2500 {0;0} Continuous Curve\n\u2502  \u251c\u2500 {0;0}[0] Point/Plane/Height/Tangent\n\u2502  \u251c\u2500 {0;0}[1] Point/Plane/Height/Tangent\n\u2502  \u2514\u2500 ...\n\u251c\u2500 {0;1} Continuous Curve\n\u251c\u2500 ... \n\u2514\u2500 Toolpath\n</code></pre>"},{"location":"io/surface-toolpath-twins/surface-toolpath-twins.html","title":"Surface-toolpath twins","text":""},{"location":"io/surface-toolpath-twins/surface-toolpath-twins.html#toolpath-mesh","title":"Toolpath Mesh","text":"<p> <code>Toolpath Mesh</code> features a surface reconstruction algorithm that converts a  <code>Toolpath</code> back to a manifold surface in the form of a mesh. This process is the inversion of  <code>Slice</code> and produces a portable visualization of the printing scheme. The Toolpath mesh is important  since once a toolpath is modified, the original input geometry no longer reflects truthfully the printing scheme. The reconstructed Toolpath mesh captures the change in the Toolpath level and is an efficient pipeline for visualization, communication, and alternative purposes.</p> <p></p> <p>Examples of the Toolpath, the reconstructed Toolpath mesh, and the Toolpath mesh representing the extruded volume. First row: a porous column; the Stanford bunny, \u00a9Stanford 3D Scanning Repository; a Gyroid TPMS brick.  Second row: a porous panel, after Erwin Hauer (1) (2); a Diamond-TPMS-inspired component for a post-tensioned canopy structure (3) (4)</p> <ol> <li>E. Hauer, Erwin Hauer: Continua, Architectural Screens and Walls. New York, NY, USA: Princeton Architectural Press, 2004.</li> <li>Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> <li>M. Akbarzadeh, H. Chai, Y. Zhi, M. E. Ororbia, T. Teng, M. Bernhard, D. (M.) Bolhassani, F. Yavartanoo, J. Tapia, K. Pajak, M. Bernard, L. Trousset, P. Kassabian, and B. Waligun, \u201cDiamanti: 3D-printed, post-tensioned concrete canopy,\u201d in Proc. FABRICATE 2024: Creating Resourceful Futures, 2024, pp. 292\u2013301.</li> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol>"},{"location":"io/surface-toolpath-twins/surface-toolpath-twins.html#representing-the-extruded-volume","title":"Representing the extruded volume","text":"<p>An important application of  <code>Toolpath Mesh</code> is to create a mesh that represents the extruded volume. A Toolpath can be offsetted on both sides by  <code>Offset Toolpath</code> to  form a \"pseudo-Toolpath\" whose region represented the extruded volume (see Offsetting Toolpaths). The Toolpath mesh of this \"pseudo-Toolpath\" is a closed, maniford mesh representing the extruded volume. It is a compact mesh for finite-element analysis (FEA). Since it is reconstructed from the Toolpath, the FEA will reflect all modified details of the Toolpath.</p> <p></p> <p>Toolpath mesh as the extruded volume, showing different widths of extrusion</p>"},{"location":"io/surface-toolpath-twins/surface-toolpath-twins.html#surface-toolpath-twins_1","title":"Surface-toolpath twins","text":"<p>The efficient and effective surface reconstruction algorithm brings about a new view of toolpath design. It is no longer a unidirectional process. </p> <p>The surface and the Toolpath are now syncronized to form what we call the \"surface-toolpath twins\". The design-to-production process is now bidirectional: One can plug and play different form-finding results, assess and optimize their fabrication schemes in the conventional way, or leverage knowledge in fabrication design, model toolpath curves as sections, reconstruct surfaces, and merge them into form-finding and segmentation in an inverse way. </p> Single- and Multi-MaterialSingle-Material Only <p></p> <p>The Ovenbird framework highlighting the surface-toolpath twins</p> <p></p> <p>The Ovenbird framework highlighting the surface-toolpath twins (single-material only)</p> <p>Below is a minimal example of utilizing the surface-toolpath twin idea to reconstruct a surface from a limited number of curves. The surface is then refined and sliced to have denser layers.</p> <p></p> <p>For a comprehensive introduction to the proposed bidirectional workflow, please refer to our paper Surface-Toolpath Twins of Shell Components in 3D Concrete Printing for Optimized Buildability and Surface Quality. (1) </p> <ol> <li>Y. Zhi and M. Akbarzadeh, \u201cSurface-Toolpath Twins of Shell Components in 3D Concrete Printing for Optimized Buildability and Surface Quality,\u201d in Proceedings of IASS 2025 symposium: The living past as a source of innovation, Mexico City, Mexico, Oct. 2025.</li> </ol>"},{"location":"io/to-g-codes/to-g-codes.html","title":"To G-Codes","text":"<p> <code>GCode</code> and  <code>GCode Continuous</code> convert  <code>Toolpath</code> and  <code>Continuous Toolpath</code> into G-Codes compatible with most desktop 3D printers. We have included some preset profiles to choose from. The right-click menu shows all parameters that are embedded and can be modified.</p> <p>We recommend using the G-Code Previewer of PrusaSlicer for performing sanity checks.</p> <p></p> <p>G-Codes form a Continuous Toolpath, showing variable parameters</p> <p>Example File</p> <p><code>7. IO and Visualization \u2192 (2) GCode Preparation</code></p>"},{"location":"io/to-robots/to-robots.html","title":"To robots","text":"<p>Ovenbird does not directly produce machine codes for robots/gantries since they are setup-dependant. The printing team typically receive from the extruder's manufacturer a Grasshopper file that converts geometry into machine codes.</p> <p>Only a few wires are needed to pipeline the Ovenbird Toolpath/Continuous Toolpath to a 6 degrees of freedom (DoF) robot.</p> ToolpathContinuous Toolpath <p></p> <p>Ovenbird piple for robots (Toolpath)</p> <p></p> <p>Ovenbird piple for robots (Continuous Toolpath)</p> <p>The following table summarizes how the machine code information can be sourced in Ovenbird from  <code>Unwrap Toolpath</code> and  <code>Unwrap Continuous Toolpath</code> (see From/to curves).</p> Ovenbird parameter Degree of freedom (DOF) Machine code information Polyline <sup>1</sup> DOF 1-3 Tool XYZ Plane <sup>2</sup> DOF 4-5 Tool XY rotation (Tool Z orientation) Tangent DOF 6 Tool Z rotation Height Adaptive extrusion Travel/extrusion speed <ol> <li> <p>The curves should be extracted as polylines (in right-click menu). The number of points after exploding would match the other parameters.\u00a0\u21a9</p> </li> <li> <p>Planes of a  <code>Toolpath</code> are from  <code>Toolpath Planes</code>. Planes of a  <code>Continuous Toolpath</code> are available in  <code>Unwrap Continuous Toolpath</code>.\u00a0\u21a9</p> </li> </ol>"},{"location":"io/visualization/visualization.html","title":"Visualization","text":""},{"location":"io/visualization/visualization.html#visualization-mesh","title":"Visualization Mesh","text":"<p> <code>Visualize Printing</code> and  <code>Visualize Continuous Printing</code> converts toolpath curves into visualization meshes. Each curve produces one clean, closed mesh, organized in sections (and caps if the curve is open). You may change the subdivision level to adjust the quality and size of the meshes.</p> <p></p> <p>Sectional shape of the visualization mesh, showing the effect of subdivision (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>To finetune the density of sections in the visualization meshes, use  <code>Polyline Toolpath</code></p> <p></p> <p>Effect of changing the polyline resolution and mesh subdivision </p> <p>The sections are placed at the bisecting planes of adjacent segments. There are two ways to determine the width of the sections.</p> <ul> <li> <p>The corner width method uses a consistent width for sections. However, it results in long, thin segments. </p> </li> <li> <p>The segment width method widens the sections such that each segment is consistently wide. However, it creates long spikes at sharp turning points.</p> </li> </ul> <p>We suggest to, and by default, use the corner width method with fillet points added to long segments such that both the segments and corners look clean. </p> <p></p> <p>Methods of determining sections. (a) Toolpath polygon and frame planes; (b) corner width method; (c) segment width method; (d) corner width method with fillet points (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>Example Files</p> <p><code>7. IO and Visualization \u2192 (3) Toolpath Visualization</code> <code>7. IO and Visualization \u2192 (4) Toolpath Visualization In Place</code> <code>7. IO and Visualization \u2192 (5) Corner Width and Segment Width</code></p>"},{"location":"io/visualization/visualization.html#animation","title":"Animation","text":"<p>Using a parameter \\(t\\in[0,1]\\),  <code>Sub Toolpath</code> and  <code>Sub Continuous Toolpath</code> extract the beginnig part \\([0,t]\\) of a Toolpath/Continuous Toolpath. When connected to visualization components, they produce printing animations.</p> <p></p> <p>Animation of continuous printing created by Sub Continuous Toolpath and Visualize Continuous Printing (1)</p> <ol> <li> <p>Example File</p> <code>3. Toolpath Operations \u2192 (5) Infill and Split Layers</code> </li> </ol>"},{"location":"multi-material/gradient-printing/gradient-printing.html","title":"Gradient printing","text":""},{"location":"multi-material/gradient-printing/gradient-printing.html#seam-defect","title":"Seam defect","text":"<p>For multi-material closed curves, the original seam in a single-material  <code>Toolpath</code> is naturally replaced by one of the material changes in the  <code>Multi-Material Toolpath</code> to minimize the number of single-material segments. Consequently, the curve starts and ends with different materials, which introduces a visible multi-material seam defect without gradient transition. This defect can be replaced with gradient transition by having the seam of the multi-material curve at the middle of any of the single-material segments.</p> <p></p> <p>Multi-material seam defect</p>"},{"location":"multi-material/gradient-printing/gradient-printing.html#wipe-units","title":"Wipe units","text":"<p>Now the nozzle will enter and exit with the same material, called the transit material.  When the nozzle travels between two curves of different transit materials, a wiping stop is needed. The nozzle typically extrudes somewhere off the print body to complete the material transition. For each transition, we place a rectangle curve known as a wipe unit whose length should be greater than the transitional length \\(L_{2}\\), preferably with a factor. To place the wipe units, a  <code>Multi-Material Print Bed</code> should be used.</p>"},{"location":"multi-material/gradient-printing/gradient-printing.html#reorder-for-continuous-printing","title":"Reorder for continuous printing","text":"<p>Cross-layer continuous printing of branching, porous geometry requires a slender, long nozzle, which is incompatible with multi-material filament extrusion as the mixing chamber must stay close to the outlet to prevent clogging. Sequential planning thus aims to minimize multi-material seam defects and the number of accompanying wipings.  <code>Reorder Multi-Material Toolpath</code> uses a greedy algorithm that replaces the seam points to reduce seam defects, reorders the multi-material curves of each layer, and generates necessary wipe units.</p> <p></p> <p>Print scheme of two cells of Schwartz P TPMS on a     \\(300 \\times 300\\text{ mm}\\) print bed, showing the wipe units. This 90-layer print uses 8 wipe units, saving 91% of the wiping material,     11% of the total material</p> <p>Example Files</p> <p><code>9. Multi-Material Printing \u2192 (6) Reorder</code> <code>9. Multi-Material Printing \u2192 (7) Comprehensive Example</code></p>"},{"location":"multi-material/gradient-printing/gradient-printing.html#bed-adhesion","title":"Bed Adhesion","text":"<p>We can add  <code>Multi-Material Bed Adhesion</code> (skirt or brim) to a  <code>Multi-Material Toolpath</code> to prime the nozzle and enhance stability and adhesion. It should be added before  <code>Reorder Multi-Material Toolpath</code>.</p>"},{"location":"multi-material/mixing-materials/mixing-materials.html","title":"Mixing materials","text":""},{"location":"multi-material/mixing-materials/mixing-materials.html#filament-and-mixture","title":"Filament and mixture","text":"<p>A mixture of \\(n\\) filaments can be represented by a stochastic row vector \\(\\bm{v} \\in \\lbrack 0,1\\rbrack^{n}\\) with the components specifying the fraction of each filament. More specificly, for \\(n\\) filaments, the mixture</p> \\[ \\bm{v}= (v_1,v_2,\\dots,v_n) \\] <p>uses a \\(v_i\\) fraction of the \\(i\\)th filament (\\(i=1,2,\\dots,n\\)). Naturally \\(v_1+v_2+\\dots+v_n=1\\). We use \\(v_i\\) as the relative speed of the \\(i\\)th feeding motor. We also use \\(\\bm{v}\\) to mix the RGB chanels of colors that represent individual filaments for visualizing the mixture.</p>"},{"location":"multi-material/mixing-materials/mixing-materials.html#mixing-matrix","title":"Mixing matrix","text":"<p>To efficiently represent and store the desired mixtures, we collect and define the vectors all at once to form a discrete, gradient palette.</p> <p>When we have \\(m\\) mixtures over \\(n\\) filaments, the mixtures are stored  as an \\(m \\times n\\) mixing matrix</p> \\[     \\bm{P} =      \\begin{bmatrix}         \\bm{v}_{1} \\\\         \\bm{v}_{2} \\\\         \\vdots \\\\         \\bm{v}_{m}     \\end{bmatrix}. \\] <p>The matrix is a user input. If not provided, Ovenbird assumes \\(m=n\\) and uses a \\(n \\times n\\) identity matrix.</p>"},{"location":"multi-material/mixing-materials/mixing-materials.html#gradient-mixtures","title":"Gradient mixtures","text":"<p>By controlling the mixing matrix, we can create a spectrum of gradient mixtures. As a minimal example, we can mix \\(n=2\\) filaments to create \\(m=3\\) mixtures using the following mixing matrix: </p> \\[  \\bm{P} =  \\begin{bmatrix}     1 &amp; 0 \\\\     0.5 &amp; 0.5 \\\\     0 &amp; 1 \\end{bmatrix}. \\tag{1} \\] <p>Example File</p> <p><code>9. Multi-Material Printing \u2192 (3) Color Mixing</code></p>"},{"location":"multi-material/mixing-materials/mixing-materials.html#mixture-of-mixtures","title":"Mixture of mixtures","text":"<p>When the the extruding system change from an old mixture to a new mixture, the intermediate state is a mixture of mixtures. Consider a stochastic row vector \\(\\hat{\\bm{u}} \\in \\lbrack 0,1\\rbrack^{m}\\) that specify the fractions of the \\(m\\) mixtures. </p> <p>The resulting composition of the \\(n\\) filaments is given by the stochastic vector  </p> \\[     \\bm{u} = \\hat{\\bm{u}}\\bm{P} \\in \\lbrack 0,1\\rbrack^{n}     \\tag{2} \\] <p>For example, when \\(n=2,m=3\\) (as in \\((1)\\)) and the extruding system changes from \\(\\hat{\\bm{u}}=(1,0,0)\\) (mixture \\(0\\)) to \\(\\hat{\\bm{u}}=(0,1,0)\\) (mixture \\(1\\)), an intermediate state can be \\(\\hat{\\bm{u}}=(0.5,0.5,0)\\). From \\((2)\\), the composition of the filaments at this moment is</p> \\[     \\bm{u} = \\hat{\\bm{u}}\\bm{P} =(0.75,0.25). \\]"},{"location":"multi-material/mixing-materials/mixing-materials.html#transitional-behavior","title":"Transitional behavior","text":"<p>As the system changes the material mixture on the fly, it will not create distinct boundaries between the old and the new. A gradient transition is expected and modulated by the active mixing auger.</p> <p>Ovenbird's  <code>Visualize Multi-Material Printing</code> and optimization algorithms for multi-material printing with gradient transition uses a moving average model. When the feeding motor changes at travel length \\(x=0\\), after a delay, the material will change linearly, starting at \\(x=L_1\\) and finishing at \\(x=L_1+L_2\\). Let \\(\\hat{\\bm{m}}(x)\\) denote the motor speed represented by the fraction of mixtures, and similarly \\(\\hat{\\bm{r}}(x)\\) the resulting composition, the moving average model is</p> \\[     \\hat{\\bm{r}}(x) = \\frac{1}{L_{2}}\\int_{x - L_{1} - L_{2}}^{x - L_{1}}\\hat{\\bm{m}}(x)\\,\\mathrm{d}x. \\tag{3} \\] <p>\\(L_{1}\\) is the delay length and \\(L_{2}\\) is the transitional length. They depend on the nozzle design and the printing speed. The resulting breakpoint between the two mixtures will be at \\(x=L_1+\\frac{1}{2} L_2\\) where \\(\\hat{\\bm{r}}(x)\\) is the average of the two. To match the designed and resulting breakpoints we move back the breakpoints of the motors by advancement length \\(L_0=L_1+\\frac{1}{2}L_2\\) through  <code>Move Multi-Material Breakpoints</code>.</p> <p></p> <p>The relation between motor speed and resulting mixture composition, showing the fractions of two mixtures (components of the vector)</p> <p>Another benefit of the moving average model is that we can visualize frequent changes with intervals smaller than \\(L_1\\) and \\(L_2\\).</p> <p></p> <p>Effect of delay and transition</p> <p>Example Files</p> <p><code>9. Multi-Material Printing \u2192 (4) Material Transitional Behaviors</code> <code>9. Multi-Material Printing \u2192 (5) Move Breakpoints</code></p>"},{"location":"multi-material/multi-material-overview/multi-material-overview.html","title":"Multi-material overview","text":"<p>A TPMS geometry printed with PLA filament of three colors based on the FEA result of two-point loading (1)</p> <ol> <li>Image adapted from: T. Teng, Y. Zhi, and M. Akbarzadeh, \u201cPrototyping high-fidelity multifunctional objects using single-nozzle multi-filament additive manufacturing system with active mixing,\u201d Materials &amp; Design, vol. 249, 2025.</li> </ol> <p>Ovenbird proposes a system of as-continuous-as-possible multi-material extrusion with gradient composition and transition. This page introduces the elements that form this system and the first steps to get a  <code>Multi-Material Toolpath</code>.</p>"},{"location":"multi-material/multi-material-overview/multi-material-overview.html#gradient-multi-material-extrusion","title":"Gradient multi-material extrusion","text":"<p>The multi-material extrusion system is gradient in two senses. </p> <ul> <li> <p>The system produces gradient compositions of the input materials. The extrudate is a gradient mixture of multiple filaments (1). With a limited number of distinct filaments, the system produces a spectrum of mixtures through active mixing.</p> <ol> <li>We adhere to the terminology that a filament is a pre-prepared input material and a mixture is a result of mixing that usually contains more than one filament. Unless otherwise noted, a material is a mixture.</li> </ol> </li> <li> <p>The extruded mixture is changed on the fly with gradient transitions.</p> </li> </ul>"},{"location":"multi-material/multi-material-overview/multi-material-overview.html#printing-system","title":"Printing system","text":"<p>Ovenbird's gradient multi-material extrusion relies on a single-nozzle multi-filament (SNMF) system where a palette of input filaments or pastes are fed and mixed to form the extrudate with tailored local material composition. The core of the SNMF system is a multi-inlet nozzle where filaments/pastes are fed through separate channels and converged at the mixing chamber equipped with a blending auger.</p> <p></p> <p>Multi-inlet nozzle for SNMF extrusion</p>"},{"location":"multi-material/multi-material-overview/multi-material-overview.html#multi-material-toolpath","title":"Multi-material toolpath","text":"<p>The most convenient way to create a  <code>Multi-Material Toolpath</code> in Ovenbird is through  <code>Multi-Material Printing</code>. It assigns materials to a  <code>Toolpath</code> using intersectors. To code a  <code>Toolpath</code> using \\(n\\) materials (mixtures), create a DataTree of closed intersector Breps and/or Meshes with \\(n\\) branches. Parts of the  <code>Toolpath</code> that are enclosed in the \\(i\\)th branch will be assigned the \\(i\\)th material. One of the \\(n\\) branches can be left empty to note the default material. </p> <p></p> <p>The Ovenbird framework highlight multi-material printing</p> <p>Example File</p> <p><code>9. Multi-Material Printing \u2192 (1) Minimal Working Example</code></p>"},{"location":"multi-material/multi-material-overview/multi-material-overview.html#data-structure","title":"Data structure","text":"<p>A  <code>Multi-Material Toolpath</code> is a printing scheme of toolpath curves coded with material information. It is organized in layers, similar to the Toolpath data structure. Each multi-material toolpath curve consists of several segments, where each segment is assigned a specific material. Each material is given a color for visualization.</p> <pre><code>{0} Multi-Material Toolpath\n\u251c\u2500 {0;0} Multi-Material Layer\n\u2502  \u251c\u2500 {0;0;0} Multi-Material Curve\n\u2502  \u2502  \u251c\u2500 {0;0;0;0} Multi-Material Segment\n\u2502  \u2502  \u2502  \u251c\u2500\u2500 Curve/Polyline\n\u2502  \u2502  \u2502  \u251c\u2500\u2500 Material Index\n\u2502  \u2502  \u2502  \u251c\u2500\u2500 {0;0;0;0}[0] Point/Height/Tangent\n\u2502  \u2502  \u2502  \u251c\u2500\u2500 {0;0;0;0}[1] Point/Height/Tangent\n\u2502  \u2502  \u2502  \u2514\u2500\u2500 ...\n\u2502  \u2502  \u251c\u2500 {0;0;0;1} Multi-Material Segment\n\u2502  \u2502  \u2514\u2500 ...\n\u2502  \u251c\u2500 {0;0;1} Multi-Material Curve\n\u2502  \u2514\u2500 ...\n\u251c\u2500 {0;1} Multi-Material Layer\n\u251c\u2500 ...\n\u2514\u2500 Material Colors \n   \u251c\u2500 Material Colors[0]\n   \u251c\u2500 Material Colors[1]\n   \u2514\u2500 ...\n</code></pre> <p>The  <code>Multi-Material Toolpath</code> can be wrapped and unwrapped. Utilizing  <code>Wrap Multi-Material Toolpath</code>, we can create alternative methods of generating a  <code>Multi-Material Toolpath</code> other than  <code>Multi-Material Printing</code>. ( <code>Simplify Multi-Material Toolpath</code> comes handy here.) A comprehensive discussion can be found in our paper Prototyping high-fidelity multifunctional objects using single-nozzle multi-filament additive manufacturing system with active mixing. (1)</p> <ol> <li>T. Teng, Y. Zhi, and M. Akbarzadeh, \u201cPrototyping high-fidelity multifunctional objects using single-nozzle multi-filament additive manufacturing system with active mixing,\u201d Materials &amp; Design, vol. 249, 2025.</li> </ol> <p>Example File</p> <p><code>9. Multi-Material Printing \u2192 (2) Unwrapping and Wrapping</code></p>"},{"location":"multi-material/multi-material-overview/multi-material-overview.html#multi-material-g-codes","title":"Multi-material G-Codes","text":"<p> <code>GCode Multi-Material</code> makes minimal changes to a conventional G-Code to print gradient multi-material mixtures. Each mixture is set up as a \"tool\" with a unique index number. When printing, the \\(i\\)th mixture is called by the command <code>Ti</code>.</p> <p></p> <p>Ovenbird's multi-material G-Codes (1)</p> <ol> <li>Image adapted from: T. Teng, Y. Zhi, and M. Akbarzadeh, \u201cPrototyping high-fidelity multifunctional objects using single-nozzle multi-filament additive manufacturing system with active mixing,\u201d Materials &amp; Design, vol. 249, 2025.</li> </ol>"},{"location":"optimizations/buildability-analysis/buildability-analysis.html","title":"Buildability analysis","text":"<p>Ovenbird provides an agile method of assessing the buildability of a design and predicting failures caused by extreme geometrical features.  The method is based purely on the geometric data of toolpath curves, regardless of material properties and the printing scheme.  It analyzes the geometry's overhang, or how the toolpaths reach out horizontally without being supported. </p> <p></p> <p>Types of overhangs: (a) Local overhang by ground \\(LOH_\\mathrm{G}\\); (b) local overhang by layer \\(LOH_\\mathrm{L}\\); (c) global overhang \\(GOH\\) (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol>"},{"location":"optimizations/buildability-analysis/buildability-analysis.html#local-overhang","title":"Local overhang","text":"<p> <code>Local Overhang</code> measures the overhang between adjacent layers. It assesses how much support a small toolpath segment receives from the previous layer. The toolpath curves are represented by sample points that divide a curve into segments. The local overhang (\\(L O H\\)) is a property of a sample point. Two types of local overhangs differ in non-parallel/rotary slicing:</p> <ul> <li> <p>Local overhang by ground (\\(L O H_\\mathrm{G}\\), default) projects sample points along the direction of gravity onto the previous nozzle plane. The overhang distance \\(d_\\mathrm{G}\\) is measured as the distance between the projected point and the closest support point on that layer. The local overhang is \\(LOG_\\mathrm{G}=d_\\mathrm{G}/t\\) where \\(t\\) is the layer thickness.</p> </li> <li> <p>Local overhang by layer (\\(L O H_\\mathrm{L}\\)), on the other hand, orients the sample points from the current nozzle plane to the previous nozzle plane and then calculates the local overhang in the same way. \\(L O H_\\mathrm{L}\\) measures the discontinuation of the toolpaths across adjacent layers. If we assume the material does not slump within the same layer and the friction between layers is sufficient, then \\(L O H_\\mathrm{L}\\) is a better criterion for determining buildability.</p> </li> </ul> <p>To visually inspect \\(L O H\\), the lines between each sample point and its support point are drawn and color-coded. (1) (2)</p> <ol> <li>We don't supporting baking the lines since they are too heavy for the Rhino environment.</li> <li> <p>Example File</p> <code>6. Printability Analysis and Optimization \u2192 (1) Local Overhang Analysis</code> </li> </ol>"},{"location":"optimizations/buildability-analysis/buildability-analysis.html#local-overhang-from-mesh","title":"Local overhang from mesh","text":"<p>The computation of  <code>Local Overhang</code> is time-consuming.  <code>Mesh Overhang</code> provides an faster alternative that looks at the input geometry if it is a mesh without the need of  <code>Slice</code>.</p> <p></p> <p>Normal direction and overhang</p> <p>On the input mesh, the local overhang of a sample point can be approximated as the tangent of the angle between the sample point's normal direction on the surface and the world XY plane, \\(LOH = d/t \\approx \\tan\\theta\\). Since  <code>Mesh Overhang</code> does not consult the actual layers, it cannot replace  <code>Local Overhang</code>. (1)</p> <ol> <li>When a curve is floating with no direct support,  <code>Local Overhang</code> create long lines that highlights the curve. It is less visible with  <code>Mesh Overhang</code>, especially when the floating part has a cone-like shape.</li> </ol> <p></p> <p>Mesh overhang and local overhang. You may adjust the resolution of the sample points in solving the local overhang</p>"},{"location":"optimizations/buildability-analysis/buildability-analysis.html#global-overhang","title":"Global overhang","text":"<p> <code>Global Overhang</code> assesses if a patch of multiple layers is prone to collapse. It is a property of an entire toolpath curve. It can be solved after the toolpaths are organized as one-extrusion patches. </p> <p>Essentially, the global overhang (\\(GOH\\)) of a curve is the maximal distance between the projected center of gravity of a patch supported by it and its convex hull (\\(=0\\) if the projected center of gravity is inside the convex hull). It measures how far the center of gravity of a branch reaches out without supprt. We would like all curves to have global overhangs of \\(0\\). (1)</p> <ol> <li> <p>Example File</p> <code>6. Printability Analysis and Optimization \u2192 (3) Global Overhang Analysis</code> </li> </ol>"},{"location":"optimizations/buildability-analysis/buildability-analysis.html#assessments","title":"Assessments","text":"<p>Metrics of buildability apply to different types of materials. The following table summarizes how to select the overhang solver for buildability assessments and failure predictions.</p> Type Local overhang by ground Local overhang by layer Global overhang Symbol \\(L O H_\\mathrm{G}\\) $L O H_\\mathrm{L} $ \\(G O H\\) Investigates... Local features Local features Global shape Bonding between layers and with the print bed Low High Low Hardening speed Slow Fast Irrelevant Material and max value <ul><li>Bio composites (\u22480.5)</li><li>2K Concrete (\u22481)</li><li>1K Concrete (\u22480.3)</li></ul> <ul><li>Polymers (\u22481.5)</li></ul> <ul><li>All materials (0)</li></ul> <p>Suggested combination of buildability metrics and materials</p> <p>Here is an example of failure prediction using global overhang. For materials that hardens and bonds fast (e.g. polymers), \\(G O H\\) can be larger than \\(0\\) (relevant to size of geometry).</p> <p></p> <p>Failure prediction of global overhang. The print collapsed at both locations with \\(GOH&gt;0\\) (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol>"},{"location":"optimizations/buildability-optimizations/buildability-optimizations.html","title":"Buildability optimizations","text":""},{"location":"optimizations/buildability-optimizations/buildability-optimizations.html#comparing-overhangs","title":"Comparing overhangs","text":"<p>The overhang solvers in Ovenbird outputs an  <code>Overhang Distribution</code> which displays the weighted cumulative distribution of overhangs as a line graph. In the right-click menu of the  <code>Overhang Distribution</code>, you can also choose to display bar graphs. This makes the comparison between different designs and printing schemes straightforward: The higher the curve, the more printable the Toolpath.</p> <p></p> <p>Example of comparing TPMS units. Gyroid and Diamond are better (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p></p> <p>Overhang distribution can be baked for making diagrams</p> <p></p> <p>Example of comparing different printing schemes of the same geometry (original and flipped). The original scheme is better (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol>"},{"location":"optimizations/buildability-optimizations/buildability-optimizations.html#overhang-optimization","title":"Overhang optimization","text":"<p>As suggested by mesh overhang, we can optimize the buildability of a mesh if we can effectively control the distribution of the surface's normal directions. Liu and Jacobson (2021) (1) introduced the method of \"spherical shape analogy\" that stylizes a mesh using a reference shape, where the vertices are deformed such that their normal directions match the reference shape.  <code>Overhang Optimization</code> uses this iterative method to reduce the overhang of a mesh.</p> <ol> <li>H. T. D. Liu, A. Jocabson, \u201cNormal-Driven Spherical Shape Analogies,\u201d Computer Graphics Forum, vol. 40, no. 5, pp. 45\u201355, 2021.</li> </ol> <p></p> <p>Overhang optimization examples with fixed boundaries (gray in \\(D_{B - B'}\\)) showing deformation (\\(D_{B - B'}\\)) and overhang distributions before (\\(H_{B}\\)) and after (\\(H_{B}'\\)). Left: a shellular funicular column (1). Top right: a double-sided Gyroid TPMS unit. Bottom right: a topologically optimized branching support structure. (2)</p> <ol> <li>M. Akbari and M. Akbarzadeh, \u201cGeneral translation of cellular to shellular polyhedral structures using reciprocity,\u201d Structures, vol. 63, p. 106414, 2024.</li> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol>"},{"location":"optimizations/buildability-optimizations/buildability-optimizations.html#boolean-finetuning","title":"Boolean finetuning","text":"<p>Toolpath Boolean operations are handy in manually improving the buildability at fragile locations. An example has been included in Toolpath Booleans.</p>"},{"location":"optimizations/layer-level-optimizations/layer-level-optimizations.html","title":"Layer-level optimizations","text":""},{"location":"optimizations/layer-level-optimizations/layer-level-optimizations.html#smoothing","title":"Smoothing","text":"<p>To have clean surfaces we would like to avoid sharp turns in the Toolpath.  <code>Smooth Toolpath</code> smoothes a polyline Toolpath (see Polyline Toolpath) through Laplacian smoothing iterations.</p> <p></p> <p>Smooth toolpath: (a) side constraints; (b) side + curvature constraints (1) </p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>The time and strength of smoothing can be modulated. Two optional constraints are provided.</p> <ol> <li> <p>Side constraint specifies that the polylines can only deform to one of the two sides (left or right). For Toolpaths organized as regions, this is handy if the inside or the outside of the regions has to be protected. </p> </li> <li> <p>Curvature constraint stops the smoothing of a vertex if it reaches the designated curvature. This feature preserves the overall shape of a polyline even if sharp turns need more smoothing iterations.</p> </li> </ol> <p>Example File</p> <p><code>5. Layer-Level Optimizations \u2192 (1) Smooth Toolpath</code></p>"},{"location":"optimizations/layer-level-optimizations/layer-level-optimizations.html#overfill-optimization","title":"Overfill optimization","text":"<p> <code>Overfill Optimization</code> deals with another type of overfill. When two parts of a polyline Toolpath (see Polyline Toolpath) are too close to each other,  <code>Overfill Optimization</code> pulls them apart using an iterative algorithm. Parts of the Toolpath can be locked in this process if needed.</p> <p></p> <p>Effect of clearance in overfill optimization</p> <p></p> <p>Example of a layer featuring two rectangular protected zones after overfill optimization and smoothing. The protected zones are not affected since the smoothing is constrained to the right side (1) </p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>It is recommended to perform  <code>Smooth Toolpath</code> after <code>Overfill Optimization</code>.</p> <p>Example File</p> <p><code>5. Layer-Level Optimizations \u2192 (2) Overfill Optimization</code></p>"},{"location":"optimizations/layer-level-optimizations/layer-level-optimizations.html#simplify-and-merge-regions","title":"Simplify and merge regions","text":"<p>To prepare a Continuous Toolpath with less stops-and-starts, we would favor a Toolpath with less curves per layer. For a Toolpath organized as regions, we provide two options for reducing the number of curves.</p> <ol> <li> <code>Simplify Region</code> simplifies a region by joining adjacent curves using U-turns or crossings at closest locations. Connections between inner walls will be prioritized to minimize visible changes. The number of regions per layer will not change.</li> <li> <code>Merge Regions</code> join adjacent regions by connecting the outer walls at closest locations. The total number of inner walls per layer will not change.</li> </ol> <p></p> <p>(a) A porous layer; (b) after Simplify Region; (c) then after Merge Regions (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>The two operations can be performed in either order. In certion occasions, you might want to perform only one of them. The connections will be straight lines, therefore  <code>Smooth Toolpath</code> might be needed after simplifying and merging regions.</p> <p>Example File</p> <p><code>5. Layer-Level Optimizations \u2192 (3) Simplify and Merge Regions</code></p>"},{"location":"optimizations/layer-level-optimizations/layer-level-optimizations.html#align-seams","title":"Align seams","text":"<p>Seam defects of the closed curves are more prominent in large-format material extrusion.  <code>Align Seams</code> considers three criteria for ideal seam locations.</p> <ol> <li> <p>Seams should be aligned across layers, if possible.</p> </li> <li> <p>Seams should be placed where they are less visible. This can be done by placing them near the center of the layer.</p> </li> <li> <p>Seam points should have moderate local overhangs (see Local Overhang). If not, the starting segments might fall off the body.</p> </li> </ol> <p>The location of the seam points also affect the result of  <code>Continuous Printing</code> (see Continuous printing). In that process, the seam point of the first layer in each continuous patch is preserved and the rest are aligned iteratively.</p> <p>Example File</p> <p><code>5. Layer-Level Optimizations \u2192 (4) Align Seams</code></p>"},{"location":"slicing/continuous-printing/continuous-printing.html","title":"Continuous printing","text":""},{"location":"slicing/continuous-printing/continuous-printing.html#terminology","title":"Terminology","text":"<ul> <li> <p>In Ovenbird, a  <code>Continuous Toolpath</code> is an alternative printing scheme aside the original  <code>Toolpath</code> and is the output of  <code>Continuous Printing</code>. By creates ramp curves across adjacent layers of the Toolpath, the Continuous Toolpath is an as-continuous-as-possible printing scheme. However, it is not necessarily globally continuous.  Extrusion-based 3D printing favors such continuous toolpaths to minimize the seam defects and stringing issues caused by frequent stops-and-starts and save time and material.</p> </li> <li> <p>We use \"nonstop\" as a synonym of \"globally continuous\". Most paste extruding systems for materials like concrete, clay, hydrogels, etc. are incapable of stopping and restarting the extrusion while printing with clean ends. In these cases, a nonstop continuous toolpath is desired. In the last part we show that by adding minimal travel lines,  <code>Nonstop Printing</code> makes a  <code>Continuous Toolpath</code> nonstop.</p> </li> </ul> Printing scheme Primary sources Printer extrusion ability <code>Toolpath</code> <code>Slice</code>,  <code>Wrap Toolpath</code> Stop-and-starts required <code>Continuous Toolpath</code> <code>Continuous Printing</code> Stop-and-starts required if \\(n_{CTP} &gt; 1\\) Nonstop  <code>Continuous Toolpath</code> <code>Nonstop Printing</code> Stop-and-starts not required since \\(n_{CTP} = 1\\) <p>Types of printing schemes</p>"},{"location":"slicing/continuous-printing/continuous-printing.html#topology-analysis","title":"Topology analysis","text":"<p>The number of continuous curves in a  <code>Continuous Toolpath</code>, or \\(n_{CTP}\\), is largely dependent on the vertical topology of the  <code>Toolpath</code>.   </p> <p> <code>Toolpath Topology</code> analyzes the vertical topology by identifying one-extrusion patches. An one-extrusion patch is similar to a cylinder, where each curve is solely supported by the previous one. Each one-extrusion patch can be printed with one continuous curve, assuming collision-free. The dependency graph shows how upper patches are supported by lower patches. It is a directed acyclic graph (DAG) from bottom to top.  (1)</p> <ol> <li> <p>Example File</p> <code>4. Topology and Continuous Printing \u2192 (1) Topology Analysis</code> </li> </ol> <p></p> <p>Toolpath topology types, showing one-extrusion-patches and dependency graphs \\(G_{OETP}\\) (1): (a) monolithic; (b) branching; (c) porous (2)</p> <ol> <li>A Toolpath is called a One-Extrusion Toolpath (OETP) if it is rendered as one-extrusion patches.</li> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>To reduce the number of continuous curves needed, we favor a simpler topology. At the layer-level, we recommend simplify and merge regions to reduce the number of curves per layer before  <code>Continuous Printing</code>.</p>"},{"location":"slicing/continuous-printing/continuous-printing.html#continuous-printing_1","title":"Continuous printing","text":"<p>To avoid collision between the nozzle and the printed part, we might need to subdivide the one-extrusion patches. At the same time, the subdivided one-extrusion patches are sorted into a printable sequence.  <code>Continuous Printing</code> subdivides and plans sequantially in the following way to avoid collision:</p> <ol> <li> <p>The nozzle is seen as a cylinder with a height \\(h_\\mathrm{nozzle}\\). Only this part of the extruder is allowed to go below the highest point of the printed part. Equivalently, the maximal height difference between the highest printed layer and the lowest unprinted layer should not exceed \\(h_\\mathrm{nozzle}\\). We may assume by fulfilling the criterion of \\(h_\\mathrm{nozzle}\\), the Continuous Toolpath is made collision-free. (1)</p> </li> <li> <p>Optionally, if a clearance is given,  <code>Continuous Printing</code> checks the collision between pairs of curves and  to fully ensures that the Continuous Toolpath is collision-free. This takes a longer time than relying solely on the noozle height constraint.</p> </li> </ol> <ol> <li>Due to the overhang constraint, the adjacent layers do not change drastically.</li> </ol> <p></p> <p>Continuous printing under the nozzle height \\(h_\\mathrm{nozzle}\\) constraint. (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>The full subdividing and planning algorithm is available in our paper Automated toolpath design of 3D concrete printing structural components. (1)</p> <ol> <li>Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p></p> <p>The effect of \\(h_\\mathrm{nozzle}\\) in solving the Continuous Toolpath</p> <p>Example Files</p> <p><code>4. Topology and Continuous Printing \u2192 (2) Topology and Continuous Printing</code> <code>4. Topology and Continuous Printing \u2192 (3) Configuring Continuous Printing</code></p>"},{"location":"slicing/continuous-printing/continuous-printing.html#graph-based-view-of-continuous-printing","title":"Graph-based view of continuous printing","text":"<p>In the right click menu of  <code>Continuous Printing</code>, you can find four ways of displaying the Continuous Toolpath, each with an associated dephendency graph. According to the solving order, they are:</p> <ol> <li>One-Extrusion Toolpath (OETP). The direct result of topology analysis. The graph \\(G_{OETP}\\) shows the relations between one-extrusion patches.</li> <li>Subdivided One-Extrusion Toolpath. Vertices of \\(G_{OETP}\\) are subdivided to form \\(G'_{OETP}\\) such that they can be printed without collisions. The vertices of \\(G'_{OETP}\\) that come from the same one-extrusion patch also have the same color.</li> <li>Subdivided Continuous Toolpath. Vertices of \\(G'_{OETP}\\) are sorted and recolored to form \\(G'_{CTP}\\). If adjacent vertices from different one-extrusion patches can be printed as one curve, they now share the same color. </li> <li>Continuous Toolpath (CTP). The adjacent vertices in \\(G'_{CTP}\\) sharing the same color are now joined to form \\(G_{CTP}\\)</li> </ol> <p>The thickened shapes of the four graphs are homeomorphic.</p> <p></p> <p>Types of dependency graphs. One-Extrusion Toolpath and Continuous Toolpath visualized with color coding. (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol>"},{"location":"slicing/continuous-printing/continuous-printing.html#nonstop-printing","title":"Nonstop printing","text":"<p> <code>Nonstop Printing</code> further prepares the  <code>Continuous Toolpath</code> for extruding systems that can not stop and start. (1)</p> <ol> <li> <p>Example File</p> <code>1. Introduction \u2192 (4) Minimal Working Example, Nonstop</code> </li> </ol> <p>To minimize the amount of material that falls on the printed body,  <code>Nonstop Printing</code> places the travel lines around the main body.  Firstly, the seam points of the Toolpath should placed using  <code>Align Seams</code> (see Align seams) to be closest to the object's \"boudary\", or the extruded convex hull, which is a cylindrical extrusion that wraps the geometry with a designated clearance. As a result, the starts and ends of the Continuous Toolpath are also close to the boundary. Finally, a travel line between two continuous curves is formed by projecting the end points onto the extruded convex hull and linking them using a long ramp. When the nozzle extrudes in the air, the extrudate will fall on the ground, with minimal contact with the printed body.</p> <p></p> <p>From Toolpath to an as-continuous-as-possible Continuous Toolpath and a globally continuous Continuous Toolpath</p> <p></p> <p>Animation of the nonstop Continuous Toolpath</p>"},{"location":"slicing/quick-methods/quick-methods.html","title":"Quick methods","text":""},{"location":"slicing/quick-methods/quick-methods.html#clean-toolpath","title":"Clean Toolpath","text":"<p> <code>Clean Toolpath</code> culls the short curves from the Toolpath and make open curves closed if necessary. It is a handy first step after  <code>Slice</code>.</p>"},{"location":"slicing/quick-methods/quick-methods.html#polyline-toolpath","title":"Polyline Toolpath","text":"<p> <code>Polyline Toolpath</code> converts a Toolpath that might contain NURBS curves to a Toolpath of pure polylines. This is a necessary step if certain operations such as  <code>Smooth Toolpath</code> and  <code>Overfill Optimization</code> are to be performed. The resolution of the polyline Toolpath will also affect the results of these polyline-based operations.</p> <p></p> <p>Methods of generating a polyline Toolpath. Right-click the component to configure</p>"},{"location":"slicing/quick-methods/quick-methods.html#transformations","title":"Transformations","text":"<p> <code>Toolpath</code>,  <code>Continuous Toolpath</code>, and  <code>Multi-Material Toolpath</code> objects can be transformed using native Grasshopper methods so long as the transformation is Euclidean (can be a combination of translation, rotation, and mirroring, with a determinant of \\(\\pm 1\\)).</p> <p>We also provide specific components for transformation such as  <code>Move Toolpath</code>,  <code>Rotate Toolpath</code>,  <code>Mirror Toolpath</code>,  <code>Orient Toolpath</code>, and  <code>Scale Toolpath</code>. Note that the base plane of the Toolpath is used as a system of reference. (1) </p> <ol> <li> <p>Example File</p> <code>3. Toolpath Operations \u2192 Transform Toolpath</code> </li> </ol>"},{"location":"slicing/quick-methods/quick-methods.html#bed-adhesion","title":"Bed Adhesion","text":"<p>We can add  <code>Bed Adhesion</code> (skirt or brim) to a  <code>Toolpath</code> to prime the nozzle and enhance stability and adhesion.</p>"},{"location":"slicing/slicing-options/slicing-options.html","title":"Slicing options","text":""},{"location":"slicing/slicing-options/slicing-options.html#orientation","title":"Orientation","text":"<p>The  <code>Slice</code> component accepts a list of Breps and/or Meshes and slices them on the World XY plane (\\(z = 0\\)). Therefore, your geometry should be place upright on the World XY plane for slicing. (1) If the geometry is upright but floating (\\(z\\neq0\\)), you can check <code>Right Click \u2192 Use bounding bed</code> for a quick slicing/visualization.</p> <ol> <li> <p>Example File</p> <code>1. Introduction \u2192 (2) Minimal Working Example</code> </li> </ol> <p>By using  <code>Orient To Slice</code> you can \"snap\" an arbitrarily-oriented geometry to a bed plane. (1)</p> <ol> <li> <p>Example File</p> <code>2. Slicing Options \u2192 (1) Automatic Orientation</code> </li> </ol>"},{"location":"slicing/slicing-options/slicing-options.html#parallel-slicing","title":"Parallel slicing","text":"<p>By default,  <code>Slice</code> slices the geometry using parallel layers. The actual layer thickness will be adjusted based on the total height and may differ from the given thickness <code>t</code>. For example, if <code>t</code> is \\(10\\,\\mathrm{mm}\\) and the geometry is \\(h=95\\,\\mathrm{mm}\\) tall, \\(10\\) layers of \\(9.5\\,\\mathrm{mm}\\) will be created.</p>"},{"location":"slicing/slicing-options/slicing-options.html#rotary-slicing","title":"Rotary slicing","text":"<p>If a top plane <code>T</code> is given to  <code>Slice</code>, the portion between the bed plane (World XY) and the top plane will be sliced. If the two planes are not parallel, rotary slicing will take place. The two planes define a simple rotational transformation where the bottom center \\(O_\\mathrm{bottom}\\) of the geometry travels along an arc of length \\(h\\). \\(h\\) is the nominal \"height\" of the geometry. The rotational transformation is then divided equally into layers for slicing.</p> <p> <code>Orient To Slice</code> provides a best-fit top plane that can be used as <code>T</code>. (1)</p> <ol> <li> <p>Example File</p> <code>2. Slicing Options \u2192 (2) Customized Top Plane</code> </li> </ol> <p></p> <p>Examples with exaggerated layer heights: (a) Parallel slicing; (b) Rotary slicing; (c) In rotary slicing, the rotational angle \\(A\\) is divided uniformly to form the layers (1) </p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p></p> <p>With simple transformations, you can use two planes to subtract a portion of a bigger body for slicing (1)</p> <ol> <li> <p>Example File</p> <code>2. Slicing Options \u2192 (3) Customized Bottom and Top Planes</code> </li> </ol>"},{"location":"slicing/slicing-options/slicing-options.html#layer-structure","title":"Layer structure","text":"<p>Each layer of the  <code>Toolpath</code> contains three planes: the nozzle plane, the slicing plane, and the nozzle plane of the previous layer (for the first layer, the base plane of the Toolpath instead).</p> <p></p> <p>Layer structure showing three planes and one point of the Toolpath</p> <p>The slicing plane is the bisecting plane between the bottom and top nozzle planes. It hosts the center lines of the extrusion. Therefore, the toolpath curves \\(TP_\\mathrm{slicing}\\) are solved by intersecting the slicing plane with the input geometry. However, in printing, the trajectory of the tool center point (TCP), or the tip of the nozzle, is on the nozzle plane. Therefore, \\(TP_\\mathrm{slicing}\\) is oriented from the slicing plane to the nozzle plane to form \\(TP_\\mathrm{nozzle}\\) as the actual \"Tool-Path\".</p> <p>In Ovenbird,  <code>Toolpath</code> is displayed as \\(TP_\\mathrm{nozzle}\\) by default. You can check <code>Right Click \u2192 On slicing planes</code> to place it on the slicing planes. Nozzle planes, slicing planes, and the base plane of the Toolpath can be extracted using  <code>Toolpath Planes</code>. (1)</p> <ol> <li> <p>Example File</p> <code>7. IO and Visualization \u2192 (1) Unwrapping and Wrapping</code> </li> </ol>"},{"location":"slicing/slicing-options/slicing-options.html#custom-slicing","title":"Custom slicing","text":"<p>You can create a Toolpath with customized layers by providing just the nozzle planes and a base plane. Unlike the result of parallel or rotary slicing, the transformations between each pair of nozzle planes can be unique, meaning the height, type (parallel or rotary), and rotation directions can be inconsistent across layers. (1)</p> <ol> <li> <p>Example File</p> <code>2. Slicing Options \u2192 (4) Customize Each Layer</code> </li> </ol>"},{"location":"slicing/slicing-options/slicing-options.html#co-slicing","title":"Co-slicing","text":"<p>To slice a series of objects as separate toolpaths, you can create a main toolpath and use it as a reference to  <code>Co-Slice</code> other objects. They will have the same layer structure. (1)</p> <ol> <li> <p>Example Files</p> <code>2. Slicing Options \u2192 (5) Co-Slice</code> <code>2. Slicing Options \u2192 (6) Co-Slice with Orientation</code> </li> </ol>"},{"location":"slicing/toolpath-operations/toolpath-operations.html","title":"Toolpath operations","text":""},{"location":"slicing/toolpath-operations/toolpath-operations.html#regions","title":"Regions","text":"<p>As we prefer the printing scheme to be as-continuous-as-possible to reduce seam defects, we are particularly intereseted in a Toolpath consisting of closed curves free of intersections.</p> <p>Such a Toolpath would divide a planar space into the interior and the exterior. Each continuous interior part is known as a region, enclosed by a closed polygon (the outer wall) and potentially some holes inside (the inner walls). Regions are automatically solved in Ovenbird when a component needs this information.  <code>Toolpath Regions</code> extracts the regions as trimmed surfaces. (1)</p> <ol> <li> <p>Example File</p> <code>7. IO and Visualization \u2192 (1) Unwrapping and Wrapping</code> </li> </ol> <p></p> <p>Examples of a region: (a) no holes; (b) one hole; (c) two holes. Local directions of the curve segments are uniform regardless of polylgon topologies (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cLocal optimization of self-supporting shell structures in 3D printing: a skeleton method,\u201d in Proceedings of IASS 2023 symposium: Integration of Design and Fabrication, Melbourne, Australia, Jul. 2023.</li> </ol> <p>Ovenbird adopts the convention to orient the curves such that the outer walls are counterclockwise and the inner walls are clockwise. This gives two benefits:</p> <ol> <li>The left side of the curve is always the interior. This unites a local property with a global property.</li> <li>The directions of curves across regions and layers are aligned. This enhances the surface quality of the print.</li> </ol>"},{"location":"slicing/toolpath-operations/toolpath-operations.html#offsetting-toolpaths","title":"Offsetting Toolpaths","text":"<p>For a Toolpath organized as regions, we can  <code>Offset Region</code> with a specific direction.  Open Toolpath curves do not support  <code>Offset Region</code>. </p> <p></p> <p>Offset region: (a) Initial layer; (b) inward offsetting; (c) outward offsetting (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>Both open and closed Toolpath curves can be offsetted on both sides using  <code>Offset Toolpath</code>. One application is to use the result as a \"pseudo-Toolpath\" whose region represented the extruded volume. See the following comparison between  <code>Visualize Printing</code> and  <code>Offset Toolpath</code>. (1)</p> <ol> <li> <p>Example File</p> <code>3. Toolpath Operations \u2192 (2) Offset Toolpath</code> </li> </ol> <p></p> <p>Offset toolpath: (a) initial layer; (b) visualization of extrusion; (c) offsetted toolpath</p>"},{"location":"slicing/toolpath-operations/toolpath-operations.html#toolpath-booleans","title":"Toolpath Booleans","text":"<p>Organizing Toolpath curves as regions also allows layer-level Boolean operations, which can be buggy and time-consuming when performed directly on complex surface objects (meshes, breps, etc).</p> <p></p> <p>Booleaning two Toolpaths: (a) input; (b) union; (c) difference; and (d) intersection (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>Two or multiple geometries (1) can be sliced separately using  <code>Co-Slice</code> (See co-slicing) and Booleaned using  <code>Toolpath Union</code>,  <code>Toolpath Difference</code>, and  <code>Toolpath Intersection</code>, thereby enabling the modeling technique of constructive solid geometry. (2) (3)</p> <ol> <li>By default,  <code>Toolpath Union</code> and  <code>Toolpath Intersection</code> take two Toolpaths. To Boolean a list of Toolpaths, check <code>Right Click \u2192 Use list</code>.</li> <li> <p>Example File</p> <code>3. Toolpath Operations \u2192 (3) Toolpath Booleans</code> </li> <li>There is also a  <code>Join Toolpaths</code> component that simply puts together several Toolpaths. It does not perform Boolean operations. Therefore the result might have intersections.</li> </ol> <p></p> <p>Toolpath Boolean operations, showing the regions</p> <p></p> <p>Example of unioning two Toolpaths to optimize the buildability and strength of a TPMS-inspired print (1)</p> <ol> <li>Image adapted from: Y. Zhi, H. Chai, T. Teng, and M. Akbarzadeh, \u201cAutomated toolpath design of 3D concrete printing structural components,\u201d Additive Manufacturing, p. 104662, 2025.</li> </ol> <p>An important application of Booleaning is to change the number of curves per layer (usually decreasing it) at uniform locations. Ovenbird features a filter that decides per layer to accept or reject the result of Booleaning according to the number of curves before and after. (1)</p> <ol> <li> <p>Example File</p> <code>3. Toolpath Operations \u2192 (4) Toolpath Booleans with Filters</code> </li> </ol>"},{"location":"slicing/toolpath-operations/toolpath-operations.html#managing-layers","title":"Managing layers","text":"<p>With  <code>Split Layers</code> and  <code>Join Layers</code>, a Toolpath can be divided vertically into parts that are processed separated and joined after.</p>"},{"location":"slicing/toolpath-operations/toolpath-operations.html#generating-infills","title":"Generating infills","text":"<p>Although the primary focus of Ovenbird is not to create toolpaths with infills,  <code>Infill</code> offers a simple method that iteratively offsets the boundaries of a region and then connect them to form a solid infill.</p> <p></p> <p>Example of generating infills at bottom layers to form a box</p> <p>Example File</p> <p><code>3. Toolpath Operations \u2192 (5) Infill and Split Layers</code></p>"}]}